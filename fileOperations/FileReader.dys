
--var Parser = require('parser.Parser')
var Config = require('config.config')
var FileAttr = require('fileOperations.FileAttr')

class FileReader(file)

var openFile = io.open
var gsub = string.gsub
var match = string.match


FileReader.fileRead = {}

function findFile(filePath,ending,isLuaFile)
	var fullFilePath = gsub(filePath,"%.",Config.sep)
	var fileName = fullFilePath .. ending
	var file = openFile(fileName,"r")
	if file then
		var text = file:read("a*") .. "\n"
		file:close()
		return FileAttr(fullFilePath,text,fileName,isLuaFile)
	end
	return false
end

method readFile()
	--if we havent already read this file
	if not self.fileRead[self.file] then
		var fileName = match(self.file,"[^%.]+$")
		self.fileRead[self.file] = true
		if not Config.skip[fileName .. ".dys"] then
			--search for a dysnomia file
			var dysFile = findFile(self.file,".dys",false)
			--if it is a dysnomia file then we return it for parsing.
			if dysFile then return dysFile end
		end
		if not Config.skip[fileName .. ".lua"] then
			--if it wasnt a dysnomia file then search for a regular lua file.
			var luaFile = findFile(self.file,".lua",true)
			if luaFile then return luaFile  end
		end
	end
	return FileAttr:new("","",false)
end

--when user passes in main file to start with, they might have included the .dys or .lua ending.
--this messes up our existing code, so we remove that ending if it is there.
global function FileReader.checkMainFile(file)
	if file:match("%.lua$") then
		return file:match("(.+)%.lua$")
	end
	if file:match("%.dys$") then
		return file:match("(.+)%.dys$")
	end
	return file
end

endClass
